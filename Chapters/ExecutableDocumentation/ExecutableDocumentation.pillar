!! Executable comments

An important problem that developers are facing is how to document their code. Often they would like to provide a little example to help their users.Unit Tests are already a good foundation for this 

Since Pharo 7.0 you can add to your method comment, executable expressions. This way a user can execute an expression and see its results. Since Pharo 8.0 and the introduction of DrTests executable comments are crawled by the DrTests plugin and report the executable comments that are not working. 
This way you gain on multiple levels:
- you get more user friendly and self explainable comments,
- you get the insurance that your comments are correct,
- you get tests that your code is doing what you specified.

!!! Example
To define an executable comment you should use the message ==>>>== to separate an expression from its results. 
Here is an example == 'a' asByteArray >>> #[97]==


[[[
asByteArray
	"Convert to a ByteArray with the ascii values of the string."
	"'a' asByteArray >>> #[97]"
	"'A' asByteArray >>> #[65]"
	"'ABA' asByteArray >>> #[65 66 65]"

	| b |
	b := ByteArray new: self byteSize.
	1 to: self size * 4 do: [:i |
		b at: i put: (self byteAt: i)].
	^ b
]]]

